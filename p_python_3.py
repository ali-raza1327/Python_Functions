# -*- coding: utf-8 -*-
"""P.Python 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iZZEc1yrP-1REYBqOmvgAgvbkIb_IIgD
"""

# Oop in Python

class person:
  def __init__(self,name,age):
    self.name = name
    self.age = age

p1= person('ali',20)

print(f'The age of {p1.name} is: {p1.age}')
# print(p1.name)
# print(p1.age)

class person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def info(self):
      # print(f"Hello my name is " + self.name)
        print(f"Hey my name is {self.name} and I am {self.age} years old.")

a = person("Kamil",26)
a.info()

b = person("Nisha",25)
b.info()

import logging
def log_function_call(func):
    def decorated(*args, **kwargs):
        print("Good Morning")
        logging.info(f"Calling function {func.__name__} with args={args} and kwargs={kwargs}")

        result = func(*args, **kwargs)

        logging.info(f"Function {func.__name__} returned {result}")
        print("Thanks for using this function")
        return result
    return decorated

@log_function_call
def my_function(a, b):
    return a + b
result = my_function(3, 4)
print(result)

class person():
  name = "Ali"
  occupation = "Software Engineer"
  networth = 1000

  def info(self):
    print(f"{self.name} is a {self.occupation}")
a=person()
a.info()

b = person()
b.name = "Kamil"
b.occupation = "Data Scientist"
b.info()

c = person()
c.name = "Sana"
c.occupation = "Hr"
c.info()

# exercise game snake ,water , gun

import random

def check(comp,user):
  if comp == user:
    return 0

  if (comp == 0 and user == 1):
    return -1

  if (comp == 0 and user == 2):
    return 1

  if (comp == 1 and user == 0):
    return 1

  if (comp == 1 and user == 2):
    return -1

  if (comp == 2 and user == 0):
    return -1

  return 1

user_score = 0
comp_score = 0
total_score = 0

for i in range(5):
  user_input = int(input("chose numbers 0 for Snake , 1 for Water , 2 for Gun: "))

  if user_input not in [0, 1, 2]:
    print("Invalid Number choose number between (0,1 and 2)")
    print("Try again\n")
  else:
    comp = random.randint(0,2)
    print(f"You chose {user_input}")
    print(f"Computer chose {comp}")

    score = check(comp,user_input)
    if (score == 0):
      print("Its draw\n")
    elif (score == -1):
      print("you lose\n")
      comp_score += 1
    else:
      print("You won\n")
      user_score += 1

total_score = user_score + comp_score

print("\nGame End\n")
print(f"Total score: {total_score}")
print(f"Your score: {user_score}")
print(f"Computer's score: {comp_score}")

#inheretance in python

class vehical():
  def start(self):
    print("vehical is started")

class car(vehical):
  def drive(self):
      print("Car is driving\n")

class bike(vehical):
  def ride(self):
    print("Bike is riding")


car = car()
bike = bike()

car.start()
car.drive()

bike.start()
bike.ride()

class animal():
  def speak(self):
    print("Dog makes the sound of ")

class dog(animal):
  def bark(self):
    print("woof! woof!\n")

class pet_dog(animal):
  def bark(self):
    print("woof! woof! (friendly bark)")

d=dog()
d.speak()
d.bark()

pd = pet_dog()
pd.speak()
pd.bark()

#polymorphism in python

class vehical:
  def __init__(self,brand,model):
    self.brand = brand
    self.model = model

class car(vehical):
  def move(self):
    print("dirving\n")

class boat(vehical):
  def move(self):
    print('sail\n')

class plane(vehical):
  def move(self):
    print("fly\n")

class bike(vehical):
  def move(self):
    print("ride\n")


car1=car("foard",2025)
boat1=boat("Ibiza", "Touring 20")
plane1=plane("PIA", "747")
bike1=bike("Honda", "CBR")

for x in (car1,boat1,plane1,bike1):
  print(x.brand)
  print(x.model)
  x.move()